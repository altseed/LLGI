#pragma clang diagnostic ignored "-Wmissing-prototypes"

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct Particle
{
    float2 Current;
    float2 Next;
    float2 Velocity;
    float Pscl;
    uint IsFix;
};

struct particles
{
    Particle _data[1];
};

struct CB
{
    float2 Force;
    float2 Gravity;
    float2 Dt;
    int2 GridNum;
    int2 GridSize;
};

static inline __attribute__((always_inline))
void _main(thread const uint3& dtid, device particles& particles_1, constant CB& _41)
{
    if (particles_1._data[dtid.x].IsFix != 0u)
    {
        return;
    }
    particles_1._data[dtid.x].Velocity += ((_41.Gravity + _41.Force) * _41.Dt.x);
    float2 pos = particles_1._data[dtid.x].Current + (particles_1._data[dtid.x].Velocity * _41.Dt.x);
    pos.x = fast::clamp(pos.x, 8.0, float((_41.GridNum.x * _41.GridSize.x) - 8));
    pos.y = fast::clamp(pos.y, 8.0, float((_41.GridNum.y * _41.GridSize.y) - 8));
    particles_1._data[dtid.x].Next = pos;
}

kernel void main0(constant CB& _41 [[buffer(0)]], device particles& particles_1 [[buffer(1)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])
{
    uint3 dtid = gl_GlobalInvocationID;
    uint3 param = dtid;
    _main(param, particles_1, _41);
}

