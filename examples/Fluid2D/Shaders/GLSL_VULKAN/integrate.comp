#version 430
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct Particle
{
    vec2 Current;
    vec2 Next;
    vec2 Velocity;
    float Pscl;
    uint IsFix;
};

layout(set = 2, binding = 0, std430) buffer particles
{
    Particle _data[];
} particles_1;

layout(set = 0, binding = 0, std140) uniform CB
{
    float Dt;
} _40;

void _main(uvec3 dtid)
{
    particles_1._data[dtid.x].Velocity = (particles_1._data[dtid.x].Next - particles_1._data[dtid.x].Current) / vec2(_40.Dt);
    particles_1._data[dtid.x].Current = particles_1._data[dtid.x].Next;
}

void main()
{
    uvec3 dtid = gl_GlobalInvocationID;
    uvec3 param = dtid;
    _main(param);
}

